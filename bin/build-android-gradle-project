#!/bin/bash
# QT-CI Project
# License: Apache-2.0
# https://github.com/homdx/qtci

echo Sdk28 Ndk r19c and Clang builder debian 10
export NDK_VERSION=r19c
export    ANDROID_NDK_ARCH=arch-arm
export    ANDROID_NDK_EABI=llvm
export    ANDROID_NDK_HOST=linux-x86_64
export    ANDROID_NDK_TOOLCHAIN_PREFIX=arm-linux-androideabi
export    ANDROID_NDK_TOOLCHAIN_VERSION=4.9
export DEBIAN_FRONTEND=noninteractive
export ANDROID_HOME=/tools
export  ANDROID_SDK_ROOT=${ANDROID_HOME}
export    ANDROID_NDK_PLATFORM=${SDK_PLATFORM}
#export    ANDROID_NDK_ROOT=${ANDROID_HOME}/ndk-${NDK_VERSION}
export ANDROID_NDK_TOOLS_PREFIX=${ANDROID_NDK_TOOLCHAIN_PREFIX}
export ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT
export PATH=/tools/tools/bin:$PATH

set -e

if [ $# -lt 1 ]
then
    echo build-android-gradle-project pro
    exit -1
fi

JARSIGNER=`which jarsigner`

PRO=$1

if [ -z "$QMAKE"]
then

  if [ -n "$QT_HOME" ]
  then
     QMAKE=$QT_HOME/android_armv7/bin/qmake
     PATH=$QT_HOME/android_armv7/bin:$PATH
  else
     QMAKE=qmake
  fi

fi

if [ -z "$ANDROID_TARGET_SDK_VERSION" ]
then
  ANDROID_TARGET_SDK_VERSION="28"
fi

echo $QMAKE

if [ -n "$KEYSTORE" ]
then
    echo "Key store file: $KEYSTORE"
    if [ ! -f "$KEYSTORE" ]
    then
        echo "Key store file not found!";
        exit -1
    fi

    if [ -z "$KEYPASS" ]
    then
       echo "KEYPASS is absent"
       exit -1
    fi
    DEPLOY_ARGS="--sign $KEYSTORE $KEYALIAS --storepass $KEYPASS "
fi

set -v
$QMAKE $PRO
#old version with gcc use: -r -spec android-g++

ANDROID_BUILD_PATH=`pwd`/android-build

JSON=`ls *deployment-settings.json`
#make clean
make
make install INSTALL_ROOT=${ANDROID_BUILD_PATH}

androiddeployqt --verbose --input $JSON --output `pwd`/android-build --deployment bundled --android-platform android-${ANDROID_TARGET_SDK_VERSION} --gradle --no-gdbserver $DEPLOY_ARGS

APK=${ANDROID_BUILD_PATH}/build/outputs/apk/android-build-release-signed.apk

if [ ! -f $APK ]
then
APK=${ANDROID_BUILD_PATH}/build/outputs/apk/android-build-debug.apk
fi

APK2=${ANDROID_BUILD_PATH}/build/outputs/apk/debug/android-build-release-signed.apk

if [ ! -f $APK2 ]
then
APK=${ANDROID_BUILD_PATH}/build/outputs/apk/debug/android-build-debug.apk
fi


echo "Output APK: $APK"

if [ ! -z "$JARSIGNER" ]
then
     $JARSIGNER -verify -verbose -certs $APK
fi

echo Copy Resulted apk to $HOME
cp -vf $APK $HOME
